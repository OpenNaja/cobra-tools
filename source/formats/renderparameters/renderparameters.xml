<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE fileformat>
<fileformat>

	<xi:include href="../ovl_base/ovl_base.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="xpointer(*/*)" />

    <enum name="RenderParameterType" numbytes="8" storage="uint" default="0">
        <option value="0" name="Bool" />
        <option value="1" name="Float" />
        <option value="2" name="Int" />
        <option value="3" name="UInt" />
        <option value="4" name="Float2" />
        <option value="5" name="Float3" />
        <option value="6" name="Float4" />
        <option value="7" name="Colour" />
        <option value="8" name="ColourHDR" />
        <option value="9" name="String" />
    </enum>

    <struct name="ZStrPtr" inherit="MemStruct">
        need to wrap this to avoid setting template on the np arrays
        <field name="string" type="Pointer" template="ZString" />
    </struct>

    <struct name="ParamData" inherit="MemStruct">
        16 bytes
        <field name="data" type="bool" arr1="1" cond="#ARG# #EQ# 0" />
        <field name="data" type="float" arr1="1" cond="#ARG# #EQ# 1" />
        <field name="data" type="int" arr1="1" cond="#ARG# #EQ# 2" />
        <field name="data" type="uint" arr1="1" cond="#ARG# #EQ# 3" />
        <field name="data" type="float" arr1="2" cond="#ARG# #EQ# 4" />
        <field name="data" type="float" arr1="3" cond="#ARG# #EQ# 5" />
        <field name="data" type="float" arr1="4" cond="#ARG# #EQ# 6" />
        <field name="data" type="ubyte" arr1="4" cond="#ARG# #EQ# 7" />
        <field name="data" type="float" arr1="4" cond="#ARG# #EQ# 8" />
        <field name="data" type="ZStrPtr" arr1="1" cond="#ARG# #EQ# 9" />
        <!-- todo - padding! -->
    </struct>

    <struct name="RenderParametersRoot" inherit="MemStruct">
        32 bytes
        <field name="param_name" type="Pointer" template="ZStringObfuscated"/>
        <field name="params" type="Pointer" template="ParamList" arg="params_count"/>
        <field name="params_count" type="uint64" />
        <field name="unk" type="uint64" />
    </struct>

    <struct name="ParamList" inherit="NestedPointers">
        <field name="ptrs" type="Pointer" template="Param" arr1="#ARG#"/>
    </struct>

    <struct name="CurveParamList" inherit="NestedPointers">
        <field name="ptrs" type="Pointer" template="CurveParam" arr1="#ARG#"/>
    </struct>

    <struct name="CurveList" inherit="NestedPointers" args="2">
        <field name="ptrs" type="Pointer" template="KeyPoint" arr1="#ARG1#" arg="#ARG2#"/>
    </struct>

    <struct name="Param" inherit="MemStruct">
        32 bytes
        <field name="attribute_name" type="Pointer" template="ZString"/>
        <field name="dtype" type="RenderParameterType" />
        <field name="unused" type="uint" default="0" optional="True"/>
        <field name="data" type="ParamData" arg="dtype" />
    </struct>

    <struct name="RenderParameterCurvesRoot" inherit="MemStruct">
        32 bytes
        <field name="param_name" type="Pointer" template="ZStringObfuscated"/>
        <field name="params" type="Pointer" template="CurveParamList" arg="params_count"/>
        <field name="params_count" type="uint64" />
        <field name="unk" type="uint64" />
    </struct>

    <struct name="CurveParam" inherit="MemStruct">
        <field name="attribute_name" type="Pointer" template="ZString"/>
        <field name="dtype" type="RenderParameterType" />
        <field name="do_interpolation" type="uint" >set to 1 if count > 1</field>
        <field name="samples" type="Pointer" template="CurveList" arg1="samples_count" arg2="dtype"/>
        <field name="samples_count" type="uint64" />
    </struct>

    <struct name="KeyPoint" inherit="MemStruct">
        <field name="time" type="float" />
        <field name="value" type="ParamData" arg="arg"/>
        <!-- often 0 or very close -->
        <field name="tangent before" type="float" />
        <field name="tangent after" type="float" />
    </struct>

</fileformat>
